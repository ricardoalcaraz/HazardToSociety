@using HazardToSociety.Shared.Models
@using HazardToSociety.Shared.Utilities
@inject HttpClient _httpClient;
@inject IQueryBuilderService _queryBuilderService;

<h3>DataTypes</h3>
<label>
    Limit Size
    <input type="number" @bind="LimitSize"/>
</label>
@if (PagedData != null)
{
    <button @onclick="GetNextPage">Next Page</button>
    <div class="itemList">
            <ul>
                @foreach (var dataType in NoaaDataTypeList)
                {
                    <li>@dataType</li>
                }
            </ul>
    </div>
}

@code {
    private int LimitSize { get; set; }
    private NoaaPagedData<NoaaDataType, NoaaDataTypeOptions> PagedData { get; set; }
    private List<NoaaDataType> NoaaDataTypeList { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        await GetData(new NoaaDataTypeOptions());
        NoaaDataTypeList.AddRange(PagedData.Results);
    }

    private async Task GetData(NoaaDataTypeOptions options)
    {
        var url = _queryBuilderService.GetUrl("api/records/data-types", options);
        var pagedData = await _httpClient.GetFromJsonAsync<NoaaPagedData<NoaaDataType, NoaaDataTypeOptions>>(url);
        PagedData = pagedData;
    }

    private async Task GetNextPage()
    {
        var offset = PagedData.Metadata.ResultSet.Offset + PagedData.Metadata.ResultSet.Limit;
        await GetData(new NoaaDataTypeOptions() { Offset = offset , Limit = LimitSize});
        NoaaDataTypeList.AddRange(PagedData.Results);
    }

}