// <auto-generated />
using System;
using HazardToSociety.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HazardToSociety.Server.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20211110200147_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5");

            modelBuilder.Entity("HazardToSociety.Server.Models.UpdateHistory", b =>
                {
                    b.Property<int>("UpdateType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataUpdated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresUpdates")
                        .HasColumnType("INTEGER");

                    b.HasKey("UpdateType");

                    b.ToTable("UpdateHistories");

                    b.HasData(
                        new
                        {
                            UpdateType = 1,
                            DateUpdated = new DateTime(2021, 11, 10, 12, 1, 47, 313, DateTimeKind.Local).AddTicks(273),
                            RequiresUpdates = true
                        });
                });

            modelBuilder.Entity("HazardToSociety.Shared.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MaxDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoaaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HazardToSociety.Shared.Models.LocationDataPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Average")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Max")
                        .HasColumnType("REAL");

                    b.Property<float>("Min")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationDataPoints");
                });

            modelBuilder.Entity("HazardToSociety.Shared.Models.WeatherRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WeatherRecords");
                });

            modelBuilder.Entity("HazardToSociety.Shared.Models.LocationDataPoint", b =>
                {
                    b.HasOne("HazardToSociety.Shared.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
